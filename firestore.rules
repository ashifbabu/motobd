rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Bikes collection
    match /bikes/{bikeId} {
      allow read: if true;
      allow write: if isAuthenticated() && request.resource.data.keys().hasAll(['name', 'brand', 'model_year']);
      allow delete: if isAuthenticated();
    }

    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isAuthenticated() 
        && request.resource.data.author == request.auth.uid
        && request.resource.data.keys().hasAll(['bike_id', 'content', 'rating']);
      allow update, delete: if isAuthenticated() 
        && resource.data.author == request.auth.uid;
    }

    // Users collection
    match /users/{userId} {
      allow read: if true;
      allow write: if isAuthenticated() && isOwner(userId);
    }

    // Brands collection
    match /brands/{brandId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }

    // Types collection
    match /types/{typeId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }

    // Resources collection
    match /resources/{resourceId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
  }
}